/// <reference types="yandex-maps" />
export declare type MapSettings = {
    apiKey?: string;
    lang?: string;
    version?: string;
    coordorder?: string;
    debug?: boolean;
    enterprise?: boolean;
};
export interface Geometry extends ymaps.IGeometryJson {
    coordinates: Array<RecursiveArray | number>;
    radius?: number;
}
export declare type MarkerFeature = {
    geometry: Geometry;
    properties: {
        markerId: string | number;
    };
};
export declare type MarkerJson = MarkerFeature & {
    options: ymaps.IGeoObjectOptions;
};
export declare type MarkerAction = (marker: unknown, markerJson?: MarkerJson) => void;
export declare type UpdateFunction<T> = (arr: T extends ymaps.GeoObject ? ymaps.GeoObject[] : MarkerJson[], action: 'add' | 'remove') => void;
export declare type MarkerArray<T> = T extends ymaps.GeoObject ? ymaps.GeoObject[] : MarkerJson[];
export declare type MarkerType = 'Point' | 'LineString' | 'Rectangle' | 'Polygon' | 'Circle';
export declare type RecursiveArray = Array<RecursiveArray | number>;
export declare type MapType = 'yandex#map' | 'yandex#satellite' | 'yandex#hybrid';
export declare type DetailedControls = {
    [name in ymaps.ControlKey]: Object;
};
export interface MarkerGeometry extends ymaps.IGeometry {
    setCoordinates: (value: unknown) => void;
}
